#include <bits/stdc++.h>
using namespace std;
//      data : 0 = x, 1 = y
int a[100000][2];
int status[10000] = {1};
void merge(int l, int m, int r)
{
    int n1 = m - l + 1;
    int n2 = r - m;

    int left[n1][2], right[n2][2];
    // เอาซ้าย
    for (int i = 0; i < n1; i++)
    {
        left[i][0] = a[l + i][0];
        left[i][1] = a[l + i][1];
    }
    // เอาขวา
    for (int i = 0; i < n2; i++)
    {
        right[i][0] = a[m + i + 1][0];
        right[i][1] = a[m + i + 1][1];
    }
    int i = 0, j = 0, k = l;
    while (i < n1 && j < n2)
    {
        if (left[i][0] <= right[j][0])
        {
            a[k][0] = left[i][0];
            a[k][1] = left[i][1];
            k++;
            i++;
        }
        else
        {
            a[k][0] = right[j][0];
            a[k][1] = right[j][1];
            k++;
            j++;
        }
    }
    while (i < n1)
    {
        a[k][0] = left[i][0];
        a[k][1] = left[i][1];
        k++;
        i++;
    }
    while (j < n2)
    {
        a[k][0] = right[j][0];
        a[k][1] = right[j][1];
        k++;
        j++;
    }
}
int mergesort(int l, int r)
{
    if (l < r)
    {
        int mid = (l + r) / 2;
        mergesort(l, mid);
        mergesort(mid + 1, r);
        merge(l, mid, r);
    }
}
void conq(int l, int m, int r)
{
    int k;
    // find first of right
    for (int i = m + 1; i <= r; i++)
    {
        if (status[i] == 1)
        {
            k = i;
            break;
        }
    }
    for (int i = l; i <= m; i++)
    {
        if (status[i] == 1 && a[i][1] < a[k][1])
        {
            status[i] = 0;
        }
    }
}
void maxima(int l, int r)
{
    if (l < r)
    {
        int m = (l + r - 1) / 2;
        maxima(l, m);
        maxima(m + 1, r);
        conq(l, m, r);
    }
}
int main()
{
    int n;
    cin >> n;

    for (int i = 0; i < n; i++)
    {
        cin >> a[i][0] >> a[i][1];
    }
    mergesort(0, n - 1);
    // for (int i = 0; i < n; i++)
    // {
    //     cout << a[i][0] << " " << a[i][1] << " ";
    // }
    for (int i = 0; i < 10000; i++)
    {
        status[i] = 1;
    }

    maxima(0, n - 1);
    for (int i = 0; i < n; i++)
    {
        if (status[i] == 1)
        {
            cout << a[i][0] << " " << a[i][1] << ",";
        }
    }

    return 0;
}
/*
9
1 4
2 6
3 1
4 5
5 7
6 9
7 2
8 6
9 3
*/
